<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello everone</title>
    <url>/2020/05/13/hello/</url>
    <content><![CDATA[<h2 id="welcome-to-my-blog"><a href="#welcome-to-my-blog" class="headerlink" title="welcome to my blog."></a>welcome to my blog.</h2>]]></content>
  </entry>
  <entry>
    <title>测试</title>
    <url>/2020/05/15/%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<h1 id="我的第一个标签"><a href="#我的第一个标签" class="headerlink" title="我的第一个标签"></a>我的第一个标签</h1><h2 id="曾经的是这样的"><a href="#曾经的是这样的" class="headerlink" title="曾经的是这样的"></a>曾经的是这样的</h2><p>###也许是这样的<br>asdafasfasfasdfa新政策是徐水电费水电费水电费阿斯蒂芬达到</p>
<a id="more"></a>


<h1 id="我的第二个标签"><a href="#我的第二个标签" class="headerlink" title="我的第二个标签"></a>我的第二个标签</h1><h2 id="现在是这样的"><a href="#现在是这样的" class="headerlink" title="现在是这样的"></a>现在是这样的</h2><h3 id="也许是这样的"><a href="#也许是这样的" class="headerlink" title="也许是这样的"></a>也许是这样的</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DOF 0x7f7f7f7f</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> endl <span class="meta-string">'\n'</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a,b) memset(a,b,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug(case,x); cout&lt;&lt;case&lt;&lt;<span class="meta-string">"  : "</span>&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IO ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    ll len,l,r;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> node&amp; a)<span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(a.len==len) <span class="keyword">return</span> a.l&lt;l;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> a.len&gt;len;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">priority_queue&lt;node&gt;qt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    priority_queue&lt;node&gt;qt;</span></span><br><span class="line">    ll n;<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    qt.push(&#123;n,<span class="number">1</span>,n&#125;);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">        node tmp=qt.top();qt.pop();</span><br><span class="line">        ll mid=(tmp.l+tmp.r)/<span class="number">2</span>;</span><br><span class="line">        a[mid]=i;</span><br><span class="line">        ll len=tmp.len,l=tmp.l,r=tmp.r;</span><br><span class="line">        <span class="keyword">if</span>(len&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            qt.push(&#123;len/<span class="number">2</span>,l,mid<span class="number">-1</span>&#125;);</span><br><span class="line">            qt.push(&#123;len/<span class="number">2</span>,mid+<span class="number">1</span>,r&#125;);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            qt.push(&#123;len/<span class="number">2</span><span class="number">-1</span>,l,mid<span class="number">-1</span>&#125;);</span><br><span class="line">            qt.push(&#123;len/<span class="number">2</span>,mid+<span class="number">1</span>,r&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//    freopen("ii.txt","r",stdin);</span></span><br><span class="line">    <span class="comment">//   freopen("oo.txt","w",stdout);</span></span><br><span class="line">    <span class="keyword">int</span> t;<span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        solve();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>测试sss</tag>
      </tags>
  </entry>
  <entry>
    <title>waryan</title>
    <url>/2020/05/15/waryan-1/</url>
    <content><![CDATA[<h2 id="how-are-you"><a href="#how-are-you" class="headerlink" title="how are you?"></a>how are you?</h2><h2 id="i’m-fine-thanks"><a href="#i’m-fine-thanks" class="headerlink" title="i’m fine thanks."></a>i’m fine thanks.</h2><p>i’m fine thanks.<br>i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.i’m fine thanks.</p>
]]></content>
  </entry>
</search>
